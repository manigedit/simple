{"version":3,"sources":["../../src/pages/cell-phone-number/cell-phone-number.ts","../../src/pages/cell-phone-number/cell-phone-number.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA0C;AACa;AACa;AACM;AAEnC;AACR;AACqC;AAOpE;IAsCE,6BAAmB,OAAsB,EAC7B,aAAmC,EACtC,IAAU,EACV,SAAoB,EACpB,WAAwB,EACxB,SAA0B,EAC1B,gBAAkC;QAN3C,iBA2BC;QA3BkB,YAAO,GAAP,OAAO,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAsB;QACtC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QA3C3C,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QACtB,cAAS,GAAe,EAAE,CAAC;QAGlC,eAAU,GAAa,IAAI,CAAC;QAK5B,gBAAW,GAYT;YACA,sBAAsB,EAAE,KAAK;YAC7B,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;SACd,CAAC;QAyEF,YAAO,GAEH;YACF,OAAO,EAAE,IAAI;SACd,CAAC;QAnEE,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QAEvD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACxD,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC,CAAC;QACH;;;UAGE;IACN,CAAC;IAEM,sCAAQ,GAAf;QAAA,iBAGC;QAFC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,SAAqB;YAClE,YAAI,CAAC,SAAS,GAAG,SAAS;QAA1B,CAA0B,CAAC,CAAC,CAAE,wBAAwB;IACxD,CAAC;IAED,yCAAW,GAAX,UAAY,EAAO;QACjB,gCAAgC;QAChC,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB;;;;;;;;;YASI;IACN,CAAC;IAED,qDAAuB,GAAvB;QAAA,iBAmBC;QAlBC,+CAA+C;QAC/C,6DAA6D;QAC7D,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACxD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mDAAQ,CAAC,CAAC;QAC9B,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,8BAA8B;YAC9B,oBAAoB;YACpB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,KAAI,CAAC,iBAAiB;gBAC/B,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,kEAAoC,GAApC;QAAA,iBAkBC;QAjBD,UAAU,CAAC;YACV,IAAI,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC;YAC/E,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,oCAAoC,EAAE,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;oBACvD,IAAI,aAAa,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC/C,IAAI,kBAAkB,GAAG,aAAa,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;oBACtE,8DAA8D;oBAC9D,+BAA+B;oBAC/B,IAAI,UAAU,GAAG,kBAAkB,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBACrD,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC;oBAC7C,uCAAuC;oBAC5C,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,GAAG,SAAS,CAAC,CAAC;gBAC3E,CAAC;YACF,CAAC;QACF,CAAC,EAAE,GAAG,CAAC,CAAC;IACR,CAAC;IAED,sDAAwB,GAAxB,UAAyB,KAAK;QAC9B,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClE,CAAC;IAzIU,mBAAmB;QAJ/B,gEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;WACG;SACtC,CAAC;6FAuCyC;YACd,yDAAoB;YAChC,gEAAI;YACC,mEAAS;YACP,sEAAW;YACb,6EAAe;YACR,gBAAgB;OA5ChC,mBAAmB,CA2I/B;IAAD,CAAC;AAAA;SA3IY,mBAAmB,iB;;;;;;;;;;;;;;;;;;;;ACdS;AACO;AACU;AACJ;AAWtD;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QATrC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+EAAmB;aACpB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,+EAAmB,CAAC;gBAC7C,4EAAe,CAAC,QAAQ,EAAE;aAC3B;SACF,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH","file":"29.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CountryPickerService, ICountry } from 'ngx-country-picker';\r\nimport { IonicPage, NavController, ToastController,NavParams } from 'ionic-angular';\r\n\r\nimport { User } from '../../providers';\r\nimport { MainPage } from '../';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-cell-phone-number',\r\n  templateUrl: 'cell-phone-number.html'\r\n})\r\nexport class CellPhoneNumberPage {\r\n  // The account fields for the login form.\r\n  // If you're using the username field with or without email, make\r\n  // sure to add it to the type\r\n  public countries: ICountry[] = [];\r\n  // Our translated text strings\r\n  private signupErrorString: string;\r\n  checkedbtn : boolean = true;\r\n  //slideOneForm: FormGroup;\r\n  userData: any;  \r\n  phonenumber: any;\r\n\r\n  accountData: {     \r\n    countryofbirthIsMexico: boolean,\r\n    state: string,\r\n    country: string,\r\n    clientId: string,\r\n    firstname: string,\r\n    middlename: string,\r\n    lastname: string,\r\n    gender: string,\r\n    dateofbirth: string,\r\n    occupation: string,\r\n    cellphone: string\r\n  }={     \r\n    countryofbirthIsMexico: false,\r\n    state: \"\",\r\n    country: \"\",\r\n    clientId: \"\",\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    gender: \"\",\r\n    dateofbirth: \"\",\r\n    occupation: \"\",\r\n    cellphone: \"\"\r\n  };\r\n\r\n  constructor(public navCtrl: NavController,\r\n    protected countryPicker: CountryPickerService,\r\n    public user: User, \r\n    public navParams: NavParams,\r\n    public formBuilder: FormBuilder,\r\n    public toastCtrl: ToastController,\r\n    public translateService: TranslateService) {\r\n\r\n      this.userData = navParams.data;\r\n      console.log(\"EL USUARIO EN DATE OF BIRTH  ES \", this.userData);  \r\n      this.accountData.clientId = this.userData.clientId;\r\n      this.accountData.state = this.userData.state;\r\n      this.accountData.country = this.userData.country;   \r\n      this.accountData.firstname = this.userData.firstname;\r\n      this.accountData.middlename = this.userData.middlename;\r\n      this.accountData.lastname = this.userData.lastname;\r\n      this.accountData.dateofbirth = this.userData.dateofbirth;\r\n      this.accountData.gender = this.userData.gender;\r\n      this.accountData.occupation = this.userData.occupation;\r\n\r\n      this.translateService.get('SIGNUP_ERROR').subscribe((value) => {\r\n        this.signupErrorString = value;\r\n      });\r\n      /*  this.slideOneForm = formBuilder.group({\r\n        phonenumber: ['', Validators.compose([Validators.maxLength(60), Validators.pattern('[a-zA-Z ]*'), Validators.required])] \r\n      });  \r\n      */\r\n  }\r\n\r\n  public ngOnInit(): void {    \r\n    this.countryPicker.getCountries().subscribe((countries: ICountry[]) => //get all country\r\n    this.countries = countries);  // store it in countries\r\n  }\r\n\r\n  onTextInput(ev: any) {\r\n    //let val = ev.target.value;    \r\n    //console.log(\"VALOR \",val);\r\n    this.checkedbtn = false;\r\n    /*if(!this.slideOneForm.valid){\r\n      console.log(\"NO VALIDA\");\r\n      this.checkedbtn = true;\r\n    }\r\n    else {\r\n      console.log(\"VALIDA\");\r\n      this.checkedbtn = false;\r\n        console.log(\"success!\")\r\n        //this.navCtrl.push('SexPage');\r\n    } */   \r\n  }\r\n\r\n  doActivateAccountLevel1() {\r\n    // Attempt to login in through our User service\r\n    //this.phonenumber = this.account.country + this.phonenumber;\r\n    this.accountData.cellphone = this.phonenumber;\r\n    this.user.activateLevel1(this.accountData).subscribe((resp) => {\r\n      console.log(\"EXITO\");\r\n      console.log(\"RESPUESTA \",resp);\r\n      this.navCtrl.push(MainPage);\r\n    }, (err) => {\r\n      console.log(\"ERROR\");\r\n      //this.navCtrl.push(MainPage);\r\n      // Unable to sign up\r\n      let toast = this.toastCtrl.create({\r\n        message: this.signupErrorString,\r\n        duration: 3000,\r\n        position: 'top'\r\n      });\r\n      toast.present();\r\n    });\r\n  }\r\n  \r\n  account: {\r\n    country: string\r\n  } = {    \r\n    country: \"MX\"\r\n  };\r\n\r\n  prepareCountryImageWithLabelSelector() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet buttonElements = document.querySelectorAll('div.alert-radio-group button');\r\n\t\t\tif (!buttonElements.length) {\r\n\t\t\t\tthis.prepareCountryImageWithLabelSelector();\r\n\t\t\t} else {\r\n\t\t\t\tfor (let index = 0; index < buttonElements.length; index++) {\r\n          let buttonElement = buttonElements[index];\r\n\t\t\t\t\tlet optionLabelElement = buttonElement.querySelector('.alert-radio-label');\r\n          //let image = optionLabelElement.innerHTML.trim().substr(0,2);\r\n          //console.log(\"IMAGEN \",image);\r\n          var totalWords = optionLabelElement.innerHTML.trim();\r\n          var firstWord = totalWords.replace(/ .*/,'');\r\n          //console.log(\"CODIGO ISO \",firstWord);\r\n\t\t\t\t\tbuttonElement.classList.add('imagewithlabelselect', 'image_' + firstWord);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, 100);\r\n  }\r\n  \r\n  setCountryImageWithLabel(image) {\r\n\t\tconsole.log('Selected image with label is', this.account.country);\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cell-phone-number/cell-phone-number.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { CellPhoneNumberPage } from './cell-phone-number';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CellPhoneNumberPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(CellPhoneNumberPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n})\r\nexport class CellPhoneNumberPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cell-phone-number/cell-phone-number.module.ts"],"sourceRoot":""}